script.

  $('.no-user-comment-form').on('release click', function(event){
    event.preventDefault();
    // swal("Please register to leave a comment")

    return swal({
      text: "Please register to leave a comment",
      type: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Sign Up Now'
    }).then(function (result) {
      if (result.value) {
        window.location.href = "/signup";
      }
    })

  })

  function getParameterByName(name, url) {
    if (!url) url = window.location.href;
    name = name.replace(/[\[\]]/g, "\\$&");
    var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
      results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, " "));
  }

  var autoplay = getParameterByName('autoplay');

  var sensitive = #{upload.sensitive}

  var autoplay;
  if(sensitive || autoplay == 'off'){
    autoplay = false;
  } else {
    autoplay = true;
  }

  // Available controls:
  /*
    controls: [
    'play-large', // The large play button in the center
    'restart', // Restart playback
    'rewind', // Rewind by the seek time (default 10 seconds)
    'play', // Play/pause playback
    'fast-forward', // Fast forward by the seek time (default 10 seconds)
    'progress', // The progress bar and scrubber for playback and buffering
    'current-time', // The current time of playback
    'duration', // The full duration of the media
    'mute', // Toggle mute
    'volume', // Volume control
    'captions', // Toggle captions
    'settings', // Settings menu
    'pip', // Picture-in-picture (currently Safari only)
    'airplay', // Airplay (currently Safari only)
    'download', // Show a download button with a link to either the current source or a custom URL you specify in your options
    'fullscreen', // Toggle fullscreen
    ];
  */
  // The order you pass them is the order they appear

  var plyr_options = {
    autoplay: autoplay,
    clickToPlay: true,
    speed: {selected: 1, options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2]},
    controls: ['play-large', 'play','progress', 'current-time', 'duration', 'captions', 'airplay', 'pip', 'mute', 'volume', 'settings', 'fullscreen'],
    settings: ['speed', 'captions', 'quality', 'loop']
  };

  // Create the plyr instances - this defines players[0] as our primary player.
  var players = Plyr.setup("#media_player", plyr_options);

  players[0].on('ready', function (event) {
    // set video max-height to 620px
    $('.display-element').css('max-height', '620px');
  });

  players[0].on('enterfullscreen', function (event) {

    $('.display-element').css('max-height', "")


    // remove video max-height

  });

  players[0].on('exitfullscreen', function (event) {
    // add max height
    $('.display-element').css('max-height','620px')
  });

  $("[data-plyr=seek]").css('cursor','pointer')

  $("[data-plyr=volume]").css('cursor','pointer')
